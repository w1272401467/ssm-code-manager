<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!--    此spring配置文件主要把mybatis 整合到spring，springmvc在另一个配置文件里面-->

    <!-- 配置注解扫描 -->
    <context:component-scan base-package="com.wjj.service"/>

    <!--加载jdbc配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc_driver}"/>
        <property name="url" value="${jdbc_url}" />
        <property name="username" value="${jdbc_username}" />
        <property name="password" value="${jdbc_password}" />
        <!--初始化值-->
        <property name="initialSize" value="3" />
        <!--最大连接数量-->
        <property name="maxActive" value="20" />
        <!--最小空余的数量-->
        <property name="minIdle" value="1" />
        <!--最长等待时间-->
        <property name="maxWait" value="60000" />


        <!--过滤器-->
        <property name="filters" value="stat" />
        <!--配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒-->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!--配置一个连接在池中最小生存的时间，单位是毫秒-->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <!--打开removeAbandoned功能-->
        <property name="removeAbandoned" value="true" />
        <!--使用数据源时，先通过一条简单的sql验证此数据源是否能用-->
        <property name="validationQuery" value="SELECT 1" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="50"/>
    </bean>

    <!--先写class属性，id属性会自动提示-->
    <!-- 配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--配置数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!-- 扫描model包，使用别名配置(在mybatis中可以使用别名，即model的名称) -->
        <property name="typeAliasesPackage" value="com.wjj.model"/>
        <!-- 扫描Mapper层的配置文件 -->
        <property name="mapperLocations" value="classpath:com/wjj/mapper/*.xml"/>
    </bean>

    <!--mapper扫描的配置-->
    <!-- 使用mybatis的接口代理开发模式(必须保证接口和对应的mybatis的xml名称相同，且在一个文件夹内) -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.wjj.mapper"/>
        <!--需要指定sqlSessionFactoryBeanName，value填id-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>








</beans>